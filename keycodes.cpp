#include "detect_os.hpp"
#include "keycodes.hpp"

#ifdef PAZ_MACOS

#define CASE(a, b) case 0x##a: return Key::b;

paz::Key paz::convert_keycode(int key)
{
    switch(key)
    {
        CASE(00, A)
        CASE(01, S)
        CASE(02, D)
        CASE(03, F)
        CASE(04, H)
        CASE(05, G)
        CASE(06, Z)
        CASE(07, X)
        CASE(08, C)
        CASE(09, V)
        CASE(0b, B)
        CASE(0c, Q)
        CASE(0d, W)
        CASE(0e, E)
        CASE(0f, R)
        CASE(10, Y)
        CASE(11, T)
        CASE(12, One)
        CASE(13, Two)
        CASE(14, Three)
        CASE(15, Four)
        CASE(16, Six)
        CASE(17, Five)
        CASE(18, Equal)
        CASE(19, Nine)
        CASE(1a, Seven)
        CASE(1b, Minus)
        CASE(1c, Eight)
        CASE(1d, Zero)
        CASE(1e, RightBracket)
        CASE(1f, O)
        CASE(20, U)
        CASE(21, LeftBracket)
        CASE(22, I)
        CASE(23, P)
        CASE(25, L)
        CASE(26, J)
        CASE(27, Apostrophe)
        CASE(28, K)
        CASE(29, Semicolon)
        CASE(2a, Backslash)
        CASE(2b, Comma)
        CASE(2c, Slash)
        CASE(2d, N)
        CASE(2e, M)
        CASE(2f, Period)
        CASE(32, Grave)
        CASE(41, KeypadDecimal)
        CASE(43, KeypadMultiply)
        CASE(45, KeypadPlus)
        CASE(4b, KeypadDivide)
        CASE(4c, KeypadEnter)
        CASE(4e, KeypadMinus)
        CASE(51, KeypadEqual)
        CASE(52, Keypad0)
        CASE(53, Keypad1)
        CASE(54, Keypad2)
        CASE(55, Keypad3)
        CASE(56, Keypad4)
        CASE(57, Keypad5)
        CASE(58, Keypad6)
        CASE(59, Keypad7)
        CASE(5b, Keypad8)
        CASE(5c, Keypad9)
        CASE(24, Enter)
        CASE(30, Tab)
        CASE(31, Space)
        CASE(33, Backspace)
        CASE(35, Escape)
        CASE(36, RightSuper)
        CASE(37, LeftSuper)
        CASE(38, LeftShift)
        CASE(39, CapsLock)
        CASE(3a, LeftAlt)
        CASE(3b, LeftControl)
        CASE(3c, RightShift)
        CASE(3d, RightAlt)
        CASE(3e, RightControl)
        CASE(40, F17)
        CASE(4f, F18)
        CASE(50, F19)
        CASE(5a, F20)
        CASE(60, F5)
        CASE(61, F6)
        CASE(62, F7)
        CASE(63, F3)
        CASE(64, F8)
        CASE(65, F9)
        CASE(67, F11)
        CASE(69, F13)
        CASE(6a, F16)
        CASE(6b, F14)
        CASE(6d, F10)
        CASE(6f, F12)
        CASE(71, F15)
        CASE(72, Insert)
        CASE(73, Home)
        CASE(74, PageUp)
        CASE(75, Delete)
        CASE(76, F4)
        CASE(77, End)
        CASE(78, F2)
        CASE(79, PageDown)
        CASE(7a, F1)
        CASE(7b, Left)
        CASE(7c, Right)
        CASE(7d, Down)
        CASE(7e, Up)
    }

    return Key::Unknown;
}

#else

#ifndef __gl_h_
#include "gl_core_4_1.h"
#endif
#include <GLFW/glfw3.h>

#define CASE(a, b) case GLFW_KEY_##a: return Key::b;

paz::Key paz::convert_keycode(int key)
{
    switch(key)
    {
        CASE(SPACE, Space)
        CASE(APOSTROPHE, Apostrophe)
        CASE(COMMA, Comma)
        CASE(MINUS, Minus)
        CASE(PERIOD, Period)
        CASE(SLASH, Slash)
        CASE(0, Zero)
        CASE(1, One)
        CASE(2, Two)
        CASE(3, Three)
        CASE(4, Four)
        CASE(5, Five)
        CASE(6, Six)
        CASE(7, Seven)
        CASE(8, Eight)
        CASE(9, Nine)
        CASE(SEMICOLON, Semicolon)
        CASE(EQUAL, Equal)
        CASE(A, A)
        CASE(B, B)
        CASE(C, C)
        CASE(D, D)
        CASE(E, E)
        CASE(F, F)
        CASE(G, G)
        CASE(H, H)
        CASE(I, I)
        CASE(J, J)
        CASE(K, K)
        CASE(L, L)
        CASE(M, M)
        CASE(N, N)
        CASE(O, O)
        CASE(P, P)
        CASE(Q, Q)
        CASE(R, R)
        CASE(S, S)
        CASE(T, T)
        CASE(U, U)
        CASE(V, V)
        CASE(W, W)
        CASE(X, X)
        CASE(Y, Y)
        CASE(Z, Z)
        CASE(LEFT_BRACKET, LeftBracket)
        CASE(BACKSLASH, Backslash)
        CASE(RIGHT_BRACKET, RightBracket)
        CASE(GRAVE_ACCENT, Grave)
        CASE(ESCAPE, Escape)
        CASE(ENTER, Enter)
        CASE(TAB, Tab)
        CASE(BACKSPACE, Backspace)
        CASE(INSERT, Insert)
        CASE(DELETE, Delete)
        CASE(RIGHT, Right)
        CASE(LEFT, Left)
        CASE(DOWN, Down)
        CASE(UP, Up)
        CASE(PAGE_UP, PageUp)
        CASE(PAGE_DOWN, PageDown)
        CASE(HOME, Home)
        CASE(END, End)
        CASE(CAPS_LOCK, CapsLock)
        CASE(F1, F1)
        CASE(F2, F2)
        CASE(F3, F3)
        CASE(F4, F4)
        CASE(F5, F5)
        CASE(F6, F6)
        CASE(F7, F7)
        CASE(F8, F8)
        CASE(F9, F9)
        CASE(F10, F10)
        CASE(F11, F11)
        CASE(F12, F12)
        CASE(F13, F13)
        CASE(F14, F14)
        CASE(F15, F15)
        CASE(F16, F16)
        CASE(F17, F17)
        CASE(F18, F18)
        CASE(F19, F19)
        CASE(F20, F20)
        CASE(F21, F21)
        CASE(F22, F22)
        CASE(F23, F23)
        CASE(F24, F24)
        CASE(F25, F25)
        CASE(KP_0, Keypad0)
        CASE(KP_1, Keypad1)
        CASE(KP_2, Keypad2)
        CASE(KP_3, Keypad3)
        CASE(KP_4, Keypad4)
        CASE(KP_5, Keypad5)
        CASE(KP_6, Keypad6)
        CASE(KP_7, Keypad7)
        CASE(KP_8, Keypad8)
        CASE(KP_9, Keypad9)
        CASE(KP_DECIMAL, KeypadDecimal)
        CASE(KP_DIVIDE, KeypadDivide)
        CASE(KP_MULTIPLY, KeypadMultiply)
        CASE(KP_SUBTRACT, KeypadMinus)
        CASE(KP_ADD, KeypadPlus)
        CASE(KP_ENTER, KeypadEnter)
        CASE(KP_EQUAL, KeypadEqual)
        CASE(LEFT_SHIFT, LeftShift)
        CASE(LEFT_CONTROL, LeftControl)
        CASE(LEFT_ALT, LeftAlt)
        CASE(LEFT_SUPER, LeftSuper)
        CASE(RIGHT_SHIFT, RightShift)
        CASE(RIGHT_CONTROL, RightControl)
        CASE(RIGHT_ALT, RightAlt)
        CASE(RIGHT_SUPER, RightSuper)
    }

    return Key::Unknown;
}

#endif
